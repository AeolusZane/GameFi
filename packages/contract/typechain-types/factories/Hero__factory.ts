/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Hero, HeroInterface } from "../Hero";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "TransferHero",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum Hero.Class",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "createHero",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generateRamdom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getDex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHealth",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHeroType",
    outputs: [
      {
        internalType: "enum Hero.Class",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getHeroes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getIntellect",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getMagic",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getStrength",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    name: "setFeeToSetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "transferHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012f5380380620012f58339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b6111cb806200012a6000396000f3fe6080604052600436106100a75760003560e01c80635e7e236d116100645780635e7e236d146101e25780639a8d2882146101fe578063a2e74af614610229578063b5f0f1b714610252578063e3f2b3cf1461028f578063e53fbda6146102cc576100a7565b8063094b7415146100ac5780632c254741146100d75780633acfcaa7146101005780633fc70f2c1461013d578063461d65bc1461017a5780635bc0a623146101a5575b600080fd5b3480156100b857600080fd5b506100c1610309565b6040516100ce9190610aa7565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610b29565b61032d565b005b34801561010c57600080fd5b5061012760048036038101906101229190610b69565b610504565b6040516101349190610bb5565b60405180910390f35b34801561014957600080fd5b50610164600480360381019061015f9190610b69565b610515565b6040516101719190610bb5565b60405180910390f35b34801561018657600080fd5b5061018f610526565b60405161019c9190610bdf565b60405180910390f35b3480156101b157600080fd5b506101cc60048036038101906101c79190610b69565b61055b565b6040516101d99190610bb5565b60405180910390f35b6101fc60048036038101906101f79190610c1f565b61056c565b005b34801561020a57600080fd5b506102136108bf565b6040516102209190610d0a565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190610d2c565b610954565b005b34801561025e57600080fd5b5061027960048036038101906102749190610b69565b610a25565b6040516102869190610bb5565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b19190610b69565b610a36565b6040516102c39190610dd0565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee9190610b69565b610a55565b6040516103009190610bb5565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050905060005b8181101561040b578483828154811061039857610397610deb565b5b9060005260206000200154036103f857826001836103b69190610e49565b815481106103c7576103c6610deb565b5b90600052602060002001548382815481106103e5576103e4610deb565b5b906000526020600020018190555061040b565b808061040390610e7d565b91505061037c565b508180548061041d5761041c610ec5565b5b60019003818190600052602060002001600090559055600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150558273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbebab64de2018206ca4ee6f30b839279caa634c3f3d5c038dd77bac4a155882f866040516104f69190610bdf565b60405180910390a350505050565b6000601f601183901c169050919050565b6000601f600783901c169050919050565b600044423360405160200161053d93929190610f5d565b6040516020818303038152906040528051906020012060001c905090565b6000601f601683901c169050919050565b66038d7ea4c680003410156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad9061101d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561061c573d6000803e3d6000fd5b506000600567ffffffffffffffff81111561063a5761063961103d565b5b6040519080825280602002602001820160405280156106685781602001602082028036833780820191505090505b50905060028160008151811061068157610680610deb565b5b6020026020010181815250506007816001815181106106a3576106a2610deb565b5b602002602001018181525050600c816002815181106106c5576106c4610deb565b5b6020026020010181815250506011816003815181106106e7576106e6610deb565b5b60200260200101818152505060168160048151811061070957610708610deb565b5b60200260200101818152505060006005905060008360028111156107305761072f610d59565b5b90505b60008261073e610526565b610748919061109b565b90506000600184600d61075b91906110cc565b610763610526565b61076d919061109b565b61077791906110cc565b905084828151811061078c5761078b610deb565b5b602002602001015181901b8317925083806107a690611100565b9450508484815181106107bc576107bb610deb565b5b60200260200101518583815181106107d7576107d6610deb565b5b60200260200101818152505050506000821161073357600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fbebab64de2018206ca4ee6f30b839279caa634c3f3d5c038dd77bac4a155882f836040516108b19190610bdf565b60405180910390a350505050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561094a57602002820191906000526020600020905b815481526020019060010190808311610936575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d990611175565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601f600c83901c169050919050565b6000600382166002811115610a4e57610a4d610d59565b5b9050919050565b6000601f600283901c169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b82525050565b6000602082019050610abc6000830184610a98565b92915050565b600080fd5b6000819050919050565b610ada81610ac7565b8114610ae557600080fd5b50565b600081359050610af781610ad1565b92915050565b610b0681610a86565b8114610b1157600080fd5b50565b600081359050610b2381610afd565b92915050565b60008060408385031215610b4057610b3f610ac2565b5b6000610b4e85828601610ae8565b9250506020610b5f85828601610b14565b9150509250929050565b600060208284031215610b7f57610b7e610ac2565b5b6000610b8d84828501610ae8565b91505092915050565b600063ffffffff82169050919050565b610baf81610b96565b82525050565b6000602082019050610bca6000830184610ba6565b92915050565b610bd981610ac7565b82525050565b6000602082019050610bf46000830184610bd0565b92915050565b60038110610c0757600080fd5b50565b600081359050610c1981610bfa565b92915050565b600060208284031215610c3557610c34610ac2565b5b6000610c4384828501610c0a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c8181610ac7565b82525050565b6000610c938383610c78565b60208301905092915050565b6000602082019050919050565b6000610cb782610c4c565b610cc18185610c57565b9350610ccc83610c68565b8060005b83811015610cfd578151610ce48882610c87565b9750610cef83610c9f565b925050600181019050610cd0565b5085935050505092915050565b60006020820190508181036000830152610d248184610cac565b905092915050565b600060208284031215610d4257610d41610ac2565b5b6000610d5084828501610b14565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610d9957610d98610d59565b5b50565b6000819050610daa82610d88565b919050565b6000610dba82610d9c565b9050919050565b610dca81610daf565b82525050565b6000602082019050610de56000830184610dc1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5482610ac7565b9150610e5f83610ac7565b9250828203905081811115610e7757610e76610e1a565b5b92915050565b6000610e8882610ac7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eba57610eb9610e1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000819050919050565b610f0f610f0a82610ac7565b610ef4565b82525050565b60008160601b9050919050565b6000610f2d82610f15565b9050919050565b6000610f3f82610f22565b9050919050565b610f57610f5282610a86565b610f34565b82525050565b6000610f698286610efe565b602082019150610f798285610efe565b602082019150610f898284610f46565b601482019150819050949350505050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265206d6f6e65792c206d696e696d756d2060008201527f302e303031206574686572000000000000000000000000000000000000000000602082015250565b6000611007602b83610f9a565b915061101282610fab565b604082019050919050565b6000602082019050818103600083015261103681610ffa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110a682610ac7565b91506110b183610ac7565b9250826110c1576110c061106c565b5b828206905092915050565b60006110d782610ac7565b91506110e283610ac7565b92508282019050808211156110fa576110f9610e1a565b5b92915050565b600061110b82610ac7565b91506000820361111e5761111d610e1a565b5b600182039050919050565b7f556e697377617056323a20464f5242494444454e000000000000000000000000600082015250565b600061115f601483610f9a565b915061116a82611129565b602082019050919050565b6000602082019050818103600083015261118e81611152565b905091905056fea264697066735822122018e8da42c2d18e3c1342b81914c00c193bec6ecbade89ef21390970adf05460264736f6c63430008130033";

type HeroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HeroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hero__factory extends ContractFactory {
  constructor(...args: HeroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeToSetter, overrides || {});
  }
  override deploy(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeToSetter, overrides || {}) as Promise<
      Hero & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hero__factory {
    return super.connect(runner) as Hero__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HeroInterface {
    return new Interface(_abi) as HeroInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hero {
    return new Contract(address, _abi, runner) as unknown as Hero;
  }
}
