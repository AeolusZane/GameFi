/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TestHero, TestHeroInterface } from "../TestHero";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Hero.Class",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "createHero",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generateRamdom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getDex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHealth",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHeroType",
    outputs: [
      {
        internalType: "enum Hero.Class",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getHeroes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getIntellect",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getMagic",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getStrength",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    name: "setFeeToSetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
    ],
    name: "setRandom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f17380380610f17833981810160405281019061003291906100dd565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061010a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b6100ba8161009f565b81146100c557600080fd5b50565b6000815190506100d7816100b1565b92915050565b6000602082840312156100f3576100f261007a565b5b6000610101848285016100c8565b91505092915050565b610dfe806101196000396000f3fe6080604052600436106100a75760003560e01c8063729e7cf611610064578063729e7cf6146101d55780639a8d2882146101fe578063a2e74af614610229578063b5f0f1b714610252578063e3f2b3cf1461028f578063e53fbda6146102cc576100a7565b8063094b7415146100ac5780633acfcaa7146100d75780633fc70f2c14610114578063461d65bc146101515780635bc0a6231461017c5780635e7e236d146101b9575b600080fd5b3480156100b857600080fd5b506100c1610309565b6040516100ce9190610849565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f9919061089f565b61032d565b60405161010b91906108eb565b60405180910390f35b34801561012057600080fd5b5061013b6004803603810190610136919061089f565b61033e565b60405161014891906108eb565b60405180910390f35b34801561015d57600080fd5b5061016661034f565b6040516101739190610915565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e919061089f565b610359565b6040516101b091906108eb565b60405180910390f35b6101d360048036038101906101ce9190610955565b61036a565b005b3480156101e157600080fd5b506101fc60048036038101906101f7919061089f565b610657565b005b34801561020a57600080fd5b50610213610661565b6040516102209190610a40565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190610a8e565b6106f6565b005b34801561025e57600080fd5b506102796004803603810190610274919061089f565b6107c7565b60405161028691906108eb565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b1919061089f565b6107d8565b6040516102c39190610b32565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee919061089f565b6107f7565b60405161030091906108eb565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601f601183901c169050919050565b6000601f600783901c169050919050565b6000600254905090565b6000601f601683901c169050919050565b66038d7ea4c680003410156103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90610bd0565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561041a573d6000803e3d6000fd5b506000600567ffffffffffffffff81111561043857610437610bf0565b5b6040519080825280602002602001820160405280156104665781602001602082028036833780820191505090505b50905060028160008151811061047f5761047e610c1f565b5b6020026020010181815250506007816001815181106104a1576104a0610c1f565b5b602002602001018181525050600c816002815181106104c3576104c2610c1f565b5b6020026020010181815250506011816003815181106104e5576104e4610c1f565b5b60200260200101818152505060168160048151811061050757610506610c1f565b5b602002602001018181525050600060059050600083600281111561052e5761052d610abb565b5b90505b60008261053c61034f565b6105469190610c7d565b90506000600184600d6105599190610cdd565b61056161034f565b61056b9190610c7d565b6105759190610cdd565b905084828151811061058a57610589610c1f565b5b602002602001015181901b8317925083806105a490610d33565b9450508484815181106105ba576105b9610c1f565b5b60200260200101518583815181106105d5576105d4610c1f565b5b60200260200101818152505050506000821161053157600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505550505050565b8060028190555050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106ec57602002820191906000526020600020905b8154815260200190600101908083116106d8575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90610da8565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601f600c83901c169050919050565b60006003821660028111156107f0576107ef610abb565b5b9050919050565b6000601f600283901c169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083382610808565b9050919050565b61084381610828565b82525050565b600060208201905061085e600083018461083a565b92915050565b600080fd5b6000819050919050565b61087c81610869565b811461088757600080fd5b50565b60008135905061089981610873565b92915050565b6000602082840312156108b5576108b4610864565b5b60006108c38482850161088a565b91505092915050565b600063ffffffff82169050919050565b6108e5816108cc565b82525050565b600060208201905061090060008301846108dc565b92915050565b61090f81610869565b82525050565b600060208201905061092a6000830184610906565b92915050565b6003811061093d57600080fd5b50565b60008135905061094f81610930565b92915050565b60006020828403121561096b5761096a610864565b5b600061097984828501610940565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109b781610869565b82525050565b60006109c983836109ae565b60208301905092915050565b6000602082019050919050565b60006109ed82610982565b6109f7818561098d565b9350610a028361099e565b8060005b83811015610a33578151610a1a88826109bd565b9750610a25836109d5565b925050600181019050610a06565b5085935050505092915050565b60006020820190508181036000830152610a5a81846109e2565b905092915050565b610a6b81610828565b8114610a7657600080fd5b50565b600081359050610a8881610a62565b92915050565b600060208284031215610aa457610aa3610864565b5b6000610ab284828501610a79565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610afb57610afa610abb565b5b50565b6000819050610b0c82610aea565b919050565b6000610b1c82610afe565b9050919050565b610b2c81610b11565b82525050565b6000602082019050610b476000830184610b23565b92915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265206d6f6e65792c206d696e696d756d2060008201527f302e303031206574686572000000000000000000000000000000000000000000602082015250565b6000610bba602b83610b4d565b9150610bc582610b5e565b604082019050919050565b60006020820190508181036000830152610be981610bad565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c8882610869565b9150610c9383610869565b925082610ca357610ca2610c4e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce882610869565b9150610cf383610869565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2857610d27610cae565b5b828201905092915050565b6000610d3e82610869565b915060008203610d5157610d50610cae565b5b600182039050919050565b7f556e697377617056323a20464f5242494444454e000000000000000000000000600082015250565b6000610d92601483610b4d565b9150610d9d82610d5c565b602082019050919050565b60006020820190508181036000830152610dc181610d85565b905091905056fea26469706673582212201ff2ae458b839b2fb11085e71efdeb93359a1c343ccc5c7810586142d536776f64736f6c634300080f0033";

type TestHeroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHeroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHero__factory extends ContractFactory {
  constructor(...args: TestHeroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeToSetter, overrides || {});
  }
  override deploy(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeToSetter, overrides || {}) as Promise<
      TestHero & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestHero__factory {
    return super.connect(runner) as TestHero__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHeroInterface {
    return new Interface(_abi) as TestHeroInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestHero {
    return new Contract(address, _abi, runner) as unknown as TestHero;
  }
}
