/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TestHero, TestHeroInterface } from "../TestHero";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum Hero.Class",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "createHero",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "generateRamdom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getDex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHealth",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getHeroes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getIntellect",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getMagic",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getStrength",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
    ],
    name: "setRandom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a03806100206000396000f3fe6080604052600436106100865760003560e01c80635e7e236d116100595780635e7e236d1461016d578063729e7cf6146101895780639a8d2882146101b2578063b5f0f1b7146101dd578063e53fbda61461021a57610086565b80633acfcaa71461008b5780633fc70f2c146100c8578063461d65bc146101055780635bc0a62314610130575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610614565b610257565b6040516100bf9190610660565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610614565b610268565b6040516100fc9190610660565b60405180910390f35b34801561011157600080fd5b5061011a610279565b604051610127919061068a565b60405180910390f35b34801561013c57600080fd5b5061015760048036038101906101529190610614565b610283565b6040516101649190610660565b60405180910390f35b610187600480360381019061018291906106ca565b610294565b005b34801561019557600080fd5b506101b060048036038101906101ab9190610614565b610519565b005b3480156101be57600080fd5b506101c7610523565b6040516101d491906107b5565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff9190610614565b6105b7565b6040516102119190610660565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190610614565b6105c8565b60405161024e9190610660565b60405180910390f35b6000601f601183901c169050919050565b6000601f600783901c169050919050565b6000600154905090565b6000601f601683901c169050919050565b66b1a2bc2ec500003410156102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d590610834565b60405180910390fd5b6000600567ffffffffffffffff8111156102fb576102fa610854565b5b6040519080825280602002602001820160405280156103295781602001602082028036833780820191505090505b50905060028160008151811061034257610341610883565b5b60200260200101818152505060078160018151811061036457610363610883565b5b602002602001018181525050600c8160028151811061038657610385610883565b5b6020026020010181815250506011816003815181106103a8576103a7610883565b5b6020026020010181815250506016816004815181106103ca576103c9610883565b5b60200260200101818152505060006005905060008360028111156103f1576103f06108b2565b5b90505b6000826103ff610279565b6104099190610910565b90506000600184600d61041c9190610970565b610424610279565b61042e9190610910565b6104389190610970565b905084828151811061044d5761044c610883565b5b602002602001015181901b831792508380610467906109a4565b94505084848151811061047d5761047c610883565b5b602002602001015185838151811061049857610497610883565b5b6020026020010181815250505050600082116103f4576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505550505050565b8060018190555050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156105ad57602002820191906000526020600020905b815481526020019060010190808311610599575b5050505050905090565b6000601f600c83901c169050919050565b6000601f600283901c169050919050565b600080fd5b6000819050919050565b6105f1816105de565b81146105fc57600080fd5b50565b60008135905061060e816105e8565b92915050565b60006020828403121561062a576106296105d9565b5b6000610638848285016105ff565b91505092915050565b600063ffffffff82169050919050565b61065a81610641565b82525050565b60006020820190506106756000830184610651565b92915050565b610684816105de565b82525050565b600060208201905061069f600083018461067b565b92915050565b600381106106b257600080fd5b50565b6000813590506106c4816106a5565b92915050565b6000602082840312156106e0576106df6105d9565b5b60006106ee848285016106b5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61072c816105de565b82525050565b600061073e8383610723565b60208301905092915050565b6000602082019050919050565b6000610762826106f7565b61076c8185610702565b935061077783610713565b8060005b838110156107a857815161078f8882610732565b975061079a8361074a565b92505060018101905061077b565b5085935050505092915050565b600060208201905081810360008301526107cf8184610757565b905092915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265206d6f6e657900000000000000000000600082015250565b600061081e6016836107d7565b9150610829826107e8565b602082019050919050565b6000602082019050818103600083015261084d81610811565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061091b826105de565b9150610926836105de565b925082610936576109356108e1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061097b826105de565b9150610986836105de565b925082820190508082111561099e5761099d610941565b5b92915050565b60006109af826105de565b9150600082036109c2576109c1610941565b5b60018203905091905056fea2646970667358221220a721b4fa710e751d1efc9e6eb297fadc48be328d3066d41f5a66c931b9a59c0e64736f6c63430008180033";

type TestHeroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHeroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHero__factory extends ContractFactory {
  constructor(...args: TestHeroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestHero & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestHero__factory {
    return super.connect(runner) as TestHero__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHeroInterface {
    return new Interface(_abi) as TestHeroInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestHero {
    return new Contract(address, _abi, runner) as unknown as TestHero;
  }
}
