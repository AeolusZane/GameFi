/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TestHero, TestHeroInterface } from "../TestHero";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum Hero.Class",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "createHero",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generateRamdom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getDex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHealth",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getHeroType",
    outputs: [
      {
        internalType: "enum Hero.Class",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getHeroes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getIntellect",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getMagic",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
    ],
    name: "getStrength",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    name: "setFeeToSetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
    ],
    name: "setRandom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hero",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "transferHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011cb380380620011cb8339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b61109f806200012c6000396000f3fe6080604052600436106100c25760003560e01c80635e7e236d1161007f578063a2e74af611610059578063a2e74af61461026d578063b5f0f1b714610296578063e3f2b3cf146102d3578063e53fbda614610310576100c2565b80635e7e236d146101fd578063729e7cf6146102195780639a8d288214610242576100c2565b8063094b7415146100c75780632c254741146100f25780633acfcaa71461011b5780633fc70f2c14610158578063461d65bc146101955780635bc0a623146101c0575b600080fd5b3480156100d357600080fd5b506100dc61034d565b6040516100e991906109ff565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610a81565b610371565b005b34801561012757600080fd5b50610142600480360381019061013d9190610ac1565b6104e3565b60405161014f9190610b0d565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190610ac1565b6104f4565b60405161018c9190610b0d565b60405180910390f35b3480156101a157600080fd5b506101aa610505565b6040516101b79190610b37565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e29190610ac1565b61050f565b6040516101f49190610b0d565b60405180910390f35b61021760048036038101906102129190610b77565b610520565b005b34801561022557600080fd5b50610240600480360381019061023b9190610ac1565b61080d565b005b34801561024e57600080fd5b50610257610817565b6040516102649190610c62565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f9190610c84565b6108ac565b005b3480156102a257600080fd5b506102bd60048036038101906102b89190610ac1565b61097d565b6040516102ca9190610b0d565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f59190610ac1565b61098e565b6040516103079190610d28565b60405180910390f35b34801561031c57600080fd5b5061033760048036038101906103329190610ac1565b6109ad565b6040516103449190610b0d565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050905060005b8181101561044f57848382815481106103dc576103db610d43565b5b90600052602060002001540361043c57826001836103fa9190610da1565b8154811061040b5761040a610d43565b5b906000526020600020015483828154811061042957610428610d43565b5b906000526020600020018190555061044f565b808061044790610dd5565b9150506103c0565b508180548061046157610460610e1d565b5b60019003818190600052602060002001600090559055600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084908060018154018082558091505060019003906000526020600020016000909190919091505550505050565b6000601f601183901c169050919050565b6000601f600783901c169050919050565b6000600254905090565b6000601f601683901c169050919050565b66038d7ea4c6800034101561056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190610ecf565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156105d0573d6000803e3d6000fd5b506000600567ffffffffffffffff8111156105ee576105ed610eef565b5b60405190808252806020026020018201604052801561061c5781602001602082028036833780820191505090505b50905060028160008151811061063557610634610d43565b5b60200260200101818152505060078160018151811061065757610656610d43565b5b602002602001018181525050600c8160028151811061067957610678610d43565b5b60200260200101818152505060118160038151811061069b5761069a610d43565b5b6020026020010181815250506016816004815181106106bd576106bc610d43565b5b60200260200101818152505060006005905060008360028111156106e4576106e3610cb1565b5b90505b6000826106f2610505565b6106fc9190610f4d565b90506000600184600d61070f9190610f7e565b610717610505565b6107219190610f4d565b61072b9190610f7e565b90508482815181106107405761073f610d43565b5b602002602001015181901b83179250838061075a90610fd4565b9450508484815181106107705761076f610d43565b5b602002602001015185838151811061078b5761078a610d43565b5b6020026020010181815250505050600082116106e757600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505550505050565b8060028190555050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156108a257602002820191906000526020600020905b81548152602001906001019080831161088e575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190611049565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601f600c83901c169050919050565b60006003821660028111156109a6576109a5610cb1565b5b9050919050565b6000601f600283901c169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e9826109be565b9050919050565b6109f9816109de565b82525050565b6000602082019050610a1460008301846109f0565b92915050565b600080fd5b6000819050919050565b610a3281610a1f565b8114610a3d57600080fd5b50565b600081359050610a4f81610a29565b92915050565b610a5e816109de565b8114610a6957600080fd5b50565b600081359050610a7b81610a55565b92915050565b60008060408385031215610a9857610a97610a1a565b5b6000610aa685828601610a40565b9250506020610ab785828601610a6c565b9150509250929050565b600060208284031215610ad757610ad6610a1a565b5b6000610ae584828501610a40565b91505092915050565b600063ffffffff82169050919050565b610b0781610aee565b82525050565b6000602082019050610b226000830184610afe565b92915050565b610b3181610a1f565b82525050565b6000602082019050610b4c6000830184610b28565b92915050565b60038110610b5f57600080fd5b50565b600081359050610b7181610b52565b92915050565b600060208284031215610b8d57610b8c610a1a565b5b6000610b9b84828501610b62565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610bd981610a1f565b82525050565b6000610beb8383610bd0565b60208301905092915050565b6000602082019050919050565b6000610c0f82610ba4565b610c198185610baf565b9350610c2483610bc0565b8060005b83811015610c55578151610c3c8882610bdf565b9750610c4783610bf7565b925050600181019050610c28565b5085935050505092915050565b60006020820190508181036000830152610c7c8184610c04565b905092915050565b600060208284031215610c9a57610c99610a1a565b5b6000610ca884828501610a6c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610cf157610cf0610cb1565b5b50565b6000819050610d0282610ce0565b919050565b6000610d1282610cf4565b9050919050565b610d2281610d07565b82525050565b6000602082019050610d3d6000830184610d19565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dac82610a1f565b9150610db783610a1f565b925082821015610dca57610dc9610d72565b5b828203905092915050565b6000610de082610a1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e1257610e11610d72565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265206d6f6e65792c206d696e696d756d2060008201527f302e303031206574686572000000000000000000000000000000000000000000602082015250565b6000610eb9602b83610e4c565b9150610ec482610e5d565b604082019050919050565b60006020820190508181036000830152610ee881610eac565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f5882610a1f565b9150610f6383610a1f565b925082610f7357610f72610f1e565b5b828206905092915050565b6000610f8982610a1f565b9150610f9483610a1f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc957610fc8610d72565b5b828201905092915050565b6000610fdf82610a1f565b915060008203610ff257610ff1610d72565b5b600182039050919050565b7f556e697377617056323a20464f5242494444454e000000000000000000000000600082015250565b6000611033601483610e4c565b915061103e82610ffd565b602082019050919050565b6000602082019050818103600083015261106281611026565b905091905056fea26469706673582212206785e5ec6248b5c2e70cbf93afa107e7e3b6bc488f0006b8a1029288b34d289964736f6c634300080f0033";

type TestHeroConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestHeroConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestHero__factory extends ContractFactory {
  constructor(...args: TestHeroConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeToSetter, overrides || {});
  }
  override deploy(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeToSetter, overrides || {}) as Promise<
      TestHero & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestHero__factory {
    return super.connect(runner) as TestHero__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestHeroInterface {
    return new Interface(_abi) as TestHeroInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestHero {
    return new Contract(address, _abi, runner) as unknown as TestHero;
  }
}
